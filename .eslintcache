[{"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\index.js":"1","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\App.js":"2","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\NavBar.js":"4","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\Login.js":"5","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\Register.js":"6","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\views\\LoginScreen.js":"7","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\views\\HomeScreen.js":"8","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\routes\\LayoutRoute.js":"9","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\views\\RegistrationScreen.js":"10","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\views\\ProductScreen.js":"11","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\ProductGrid.js":"12","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\SiteInfo.js":"13","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\MailDialog.js":"14","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\Footer.js":"15","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\context\\AppContext.js":"16","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\views\\ProfileScreen.js":"17","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\routes\\PrivateRoute.js":"18","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\Profile.js":"19"},{"size":500,"mtime":499162500000,"results":"20","hashOfConfig":"21"},{"size":1295,"mtime":1609014111590,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":2704,"mtime":1609013688057,"results":"24","hashOfConfig":"21"},{"size":8833,"mtime":1609014903212,"results":"25","hashOfConfig":"21"},{"size":12342,"mtime":1608999844426,"results":"26","hashOfConfig":"21"},{"size":217,"mtime":1608555524721,"results":"27","hashOfConfig":"21"},{"size":227,"mtime":1608555538145,"results":"28","hashOfConfig":"21"},{"size":366,"mtime":1609012075819,"results":"29","hashOfConfig":"21"},{"size":250,"mtime":1608555532857,"results":"30","hashOfConfig":"21"},{"size":400,"mtime":1608961161059,"results":"31","hashOfConfig":"21"},{"size":4785,"mtime":1608999970700,"results":"32","hashOfConfig":"21"},{"size":1076,"mtime":1608961653155,"results":"33","hashOfConfig":"21"},{"size":1961,"mtime":1608894661098,"results":"34","hashOfConfig":"21"},{"size":1574,"mtime":1608962501926,"results":"35","hashOfConfig":"21"},{"size":103,"mtime":1609011178145,"results":"36","hashOfConfig":"21"},{"size":232,"mtime":1609065779296,"results":"37","hashOfConfig":"21"},{"size":500,"mtime":1609009388740,"results":"38","hashOfConfig":"21"},{"size":16070,"mtime":1609065768387,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"m0xdso",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\index.js",[],["81","82"],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\App.js",[],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\NavBar.js",[],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\Login.js",[],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\Register.js",[],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\views\\LoginScreen.js",[],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\views\\HomeScreen.js",[],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\routes\\LayoutRoute.js",[],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\views\\RegistrationScreen.js",[],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\views\\ProductScreen.js",[],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\ProductGrid.js",[],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\SiteInfo.js",[],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\MailDialog.js",[],["83","84"],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\Footer.js",[],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\context\\AppContext.js",[],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\views\\ProfileScreen.js",[],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\routes\\PrivateRoute.js",[],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\Profile.js",["85"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {\r\n    makeStyles,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Divider\r\n} from '@material-ui/core';\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\nimport AppContext from '../context/AppContext';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright Â© '}\r\n            <Link color=\"inherit\" href=\"#\">\r\n                Rentz\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundImage: 'url(https://images.unsplash.com/photo-1586023492125-27b2c045efd7)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        height: 100,\r\n        width: 100,\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(2),\r\n        padding: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    progressBar: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n    card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        backgroundColor: '#e9ecef26',\r\n        //theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        alignItems: 'center',\r\n    },\r\n    cardActions: {\r\n        alignItems: 'center',\r\n    },\r\n    cardMedia: {\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nfunction Profile() {\r\n\r\n    const [globalState, setGlobalState] = useContext(AppContext);\r\n\r\n    const [state, setState] = useState(\r\n        {\r\n            showErrors: false,\r\n            loading: false,\r\n            updateSuccess: false\r\n        }\r\n    )\r\n    const formData = new FormData();\r\n    let firstNameField;\r\n    let lastNameField;\r\n    let emailField;\r\n    let passwordField;\r\n\r\n    const attachFile = (event) => {\r\n        // 1. create an array for file\r\n        const files = Array.from(event.target.files)\r\n\r\n        // 2. for every attachment, append file to formData\r\n        files.forEach(\r\n            (file, index) => {\r\n                formData.append(index, file)\r\n            }\r\n        )\r\n    }\r\n    useEffect(\r\n        () => {\r\n            // if there is a token and globalState.profile is null\r\n            if (localStorage.getItem('jwt') && globalState.profile === null) {\r\n                // fetch GET to get profile details\r\n                fetch(\r\n                    `${process.env.REACT_APP_BACKEND}/users/profile`,\r\n                    {\r\n                        method: 'GET',\r\n                        headers: {\r\n                            'Authorization': `Bearer ${localStorage.getItem('jwt')}`\r\n                        }\r\n                    }\r\n                )\r\n                    .then(\r\n                        (backendResponse) => backendResponse.json()\r\n                    )\r\n                    .then(\r\n                        (json) => {\r\n                            console.log('user\\'s profile', json)\r\n\r\n                            // update the globalState.profile\r\n                            setGlobalState(\r\n                                {\r\n                                    ...globalState,\r\n                                    profile: json\r\n                                }\r\n                            )\r\n                            console.log('GS', globalState.profile)\r\n                        }\r\n                    ).catch(\r\n                        error => console.log(error)\r\n                    )\r\n            }\r\n        },\r\n        [globalState.loggedIn, globalState.profile]\r\n    )\r\n\r\n\r\n    const updateUser = () => {\r\n        const errors = [];\r\n        // Validate the user's input\r\n        if (firstNameField.value.length === 0) {\r\n            errors.push(\"Please enter your first name!\");\r\n        }\r\n\r\n        if (lastNameField.value.length === 0) {\r\n            errors.push(\"Please enter your last name!\");\r\n        }\r\n\r\n        if (emailField.value.length === 0) {\r\n            errors.push(\"Please enter your email!\");\r\n        }\r\n\r\n        // If there are errors\r\n        if (errors.length > 0) {\r\n\r\n            setState(\r\n                {\r\n                    loading: false,\r\n                    showErrors: true,\r\n                    errors: errors,\r\n                    updateSuccess: false\r\n                }\r\n            )\r\n        }\r\n        // If no errors\r\n        else {\r\n            setState(\r\n                {\r\n                    ...state,\r\n                    loading: true,\r\n                }\r\n            );\r\n\r\n            // Capture all of user's response\r\n            // 1. Create an object called formData\r\n            // 2. For every field, add index and value to formData\r\n            formData.append('firstName', firstNameField.value);\r\n            formData.append('lastName', lastNameField.value)\r\n            formData.append('email', emailField.value)\r\n            formData.append('password', passwordField.value)\r\n            let oldPhotoUrl = globalState.profile && globalState.profile.photoUrl && globalState.profile.photoUrl.length > 0 && globalState.profile.photoUrl[0];\r\n            formData.append('photoUrl', oldPhotoUrl)\r\n\r\n\r\n            // 4. Send to backend\r\n            fetch(\r\n                `${process.env.REACT_APP_BACKEND}/users/update`,\r\n                {\r\n                    method: 'PUT',\r\n                    body: formData,\r\n                    headers: {\r\n                        'Authorization': `Bearer ${localStorage.getItem('jwt')}`\r\n                        //\"Content-Type\": \"application/json\"\r\n                    }\r\n                }\r\n            )\r\n                // First, convert string from backend to json\r\n                .then(\r\n                    (backendResponse) => backendResponse.json()\r\n                )\r\n                // Then, we can read the json from backend\r\n                .then(\r\n                    (json) => {\r\n                        console.log(json);\r\n                        setState(\r\n                            {\r\n                                loading: false,\r\n                                showErrors: false,\r\n                                errors: null,\r\n                                updateSuccess: true\r\n                            }\r\n                        );\r\n                    }\r\n                )\r\n                // If promise did not resolve\r\n                .catch(\r\n                    (error) => {\r\n                        console.log('An error occured ', error);\r\n\r\n                        setState(\r\n                            {\r\n                                loading: false,\r\n                                showErrors: true,\r\n                                errors: [\"Something went wrong. Try again after sometime.\"],\r\n                                updateSuccess: false\r\n                            }\r\n                        );\r\n\r\n                    }\r\n                )\r\n\r\n        }\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    console.log(globalState);\r\n\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n            <Grid item xs={12} sm={8} md={5} elevation={6}>\r\n\r\n                <div>\r\n                    <Card className={`${classes.card} mt-3 ml-5 mr-5 MuiPaper-elevation3`}>\r\n                        <CardContent>\r\n                            <Box\r\n                                alignItems=\"center\"\r\n                                display=\"flex\"\r\n                                flexDirection=\"column\">\r\n                                <Avatar\r\n                                    className={classes.avatar}\r\n                                    src={globalState.profile && globalState.profile.photoUrl && globalState.profile.photoUrl.length > 0 && globalState.profile.photoUrl[0]}\r\n                                />\r\n                                <Typography\r\n                                    color=\"textPrimary\"\r\n                                    gutterBottom\r\n                                    variant=\"h4\"\r\n                                >\r\n                                    {globalState.profile && globalState.profile.firstName}\r\n                                    {\" \"}\r\n                                    {globalState.profile && globalState.profile.lastName}\r\n                                </Typography>\r\n                                <Typography\r\n                                    color=\"textSecondary\"\r\n                                    variant=\"body1\"\r\n                                >\r\n                                    {globalState.profile && globalState.profile.email}\r\n                                </Typography>\r\n                            </Box>\r\n                        </CardContent>\r\n                        <Divider />\r\n                        <CardActions className={classes.cardActions}>\r\n                            <input\r\n                                accept=\"image/*\"\r\n                                className={classes.input}\r\n                                id=\"contained-button-file\"\r\n                                multiple\r\n                                type=\"file\"\r\n                                onChange={attachFile}\r\n                            />\r\n                            <label htmlFor=\"contained-button-file\">\r\n                                <Button\r\n                                    variant=\"text\" color=\"primary\"\r\n                                    component=\"span\"\r\n                                    className=\"text-center\">\r\n                                    Change Picture\r\n                                    </Button>\r\n                            </label>\r\n                        </CardActions>\r\n                    </Card>\r\n                </div>\r\n                <div className={classes.paper}>\r\n                    <br />\r\n                    {\r\n                        state.showErrors === true &&\r\n                        <div className=\" error-messages alert alert-danger w-75 text-center\">\r\n                            <ul>\r\n                                {\r\n                                    state.errors.map(\r\n                                        (error) =>\r\n                                            <li>\r\n                                                {error}\r\n                                            </li>\r\n                                    )\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                    }\r\n\r\n                    {\r\n                        /* Success message and login */\r\n                        state.updateSuccess === true &&\r\n                        <div className=\"alert alert-success w-75 text-center\">\r\n                            Account updated succesfully!\r\n                        </div>\r\n                    }\r\n\r\n                    <form className={classes.form} noValidate>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    inputRef={elem => firstNameField = elem}\r\n                                    autoComplete=\"fname\"\r\n                                    name=\"firstName\"\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"firstName\"\r\n                                    label=\"First Name\"\r\n                                    defaultValue={globalState.profile && globalState.profile.firstName}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    inputRef={elem => lastNameField = elem}\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"lastName\"\r\n                                    label=\"Last Name\"\r\n                                    name=\"lastName\"\r\n                                    autoComplete=\"lname\"\r\n                                    defaultValue={globalState.profile && globalState.profile.lastName}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    defaultValue={globalState.profile && globalState.profile.email}\r\n                                    inputRef={elem => emailField = elem}\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    inputRef={elem => passwordField = elem}\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                    helperText=\"Enter new password if you wish to change\"\r\n                                />\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        {\r\n                            !state.loading &&\r\n                            <Button\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.submit}\r\n                                onClick={updateUser}\r\n                            >\r\n                                Update\r\n                            </Button>\r\n                        }\r\n                        {\r\n                            state.loading &&\r\n                            <LinearProgress className={classes.progressBar} />\r\n                        }\r\n                        <Grid container justify=\"flex-end\">\r\n                        </Grid>\r\n                    </form>\r\n\r\n                    <Box mt={5}>\r\n                        <Copyright />\r\n                    </Box>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Profile",{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"86","replacedBy":"90"},{"ruleId":"88","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":153,"column":9,"nodeType":"94","endLine":153,"endColumn":52,"suggestions":"95"},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],["96"],["97"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'globalState' and 'setGlobalState'. Either include them or remove the dependency array.","ArrayExpression",["98"],"no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},"Update the dependencies array to be: [globalState, globalState.loggedIn, globalState.profile, setGlobalState]",{"range":"101","text":"102"},[4653,4696],"[globalState, globalState.loggedIn, globalState.profile, setGlobalState]"]