[{"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\index.js":"1","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\App.js":"2","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\NavBar.js":"4","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\Login.js":"5","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\Register.js":"6","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\views\\LoginScreen.js":"7","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\views\\HomeScreen.js":"8","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\routes\\LayoutRoute.js":"9","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\views\\RegistrationScreen.js":"10","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\ProductGrid.js":"11","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\SiteInfo.js":"12","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\MailDialog.js":"13","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\Footer.js":"14","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\context\\AppContext.js":"15","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\views\\ProfileScreen.js":"16","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\routes\\PrivateRoute.js":"17","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\Profile.js":"18","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\views\\AddProductScreen.js":"19","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\AddProductForm.js":"20","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\SideBar.js":"21","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\UserProductsGrid.js":"22","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\DeleteConfirmModal.js":"23","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\views\\DashboardScreen.js":"24","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\CollapseNavBar.js":"25","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\WelcomeInfo.js":"26"},{"size":500,"mtime":499162500000,"results":"27","hashOfConfig":"28"},{"size":2810,"mtime":1609139863977,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"28"},{"size":2695,"mtime":1609140003716,"results":"31","hashOfConfig":"28"},{"size":8837,"mtime":1609140426558,"results":"32","hashOfConfig":"28"},{"size":12342,"mtime":1608999844426,"results":"33","hashOfConfig":"28"},{"size":217,"mtime":1608555524721,"results":"34","hashOfConfig":"28"},{"size":391,"mtime":1609137008946,"results":"35","hashOfConfig":"28"},{"size":434,"mtime":1609145278820,"results":"36","hashOfConfig":"28"},{"size":250,"mtime":1608555532857,"results":"37","hashOfConfig":"28"},{"size":4976,"mtime":1609101695988,"results":"38","hashOfConfig":"28"},{"size":1076,"mtime":1609071764655,"results":"39","hashOfConfig":"28"},{"size":2429,"mtime":1609133738279,"results":"40","hashOfConfig":"28"},{"size":1574,"mtime":1609150227968,"results":"41","hashOfConfig":"28"},{"size":103,"mtime":1609011178145,"results":"42","hashOfConfig":"28"},{"size":232,"mtime":1609065779296,"results":"43","hashOfConfig":"28"},{"size":500,"mtime":1609009388740,"results":"44","hashOfConfig":"28"},{"size":14622,"mtime":1609133733701,"results":"45","hashOfConfig":"28"},{"size":711,"mtime":1609150076843,"results":"46","hashOfConfig":"28"},{"size":11341,"mtime":1609140288767,"results":"47","hashOfConfig":"28"},{"size":4931,"mtime":1609140179505,"results":"48","hashOfConfig":"28"},{"size":5516,"mtime":1609133728018,"results":"49","hashOfConfig":"28"},{"size":3207,"mtime":1609140775718,"results":"50","hashOfConfig":"28"},{"size":1038,"mtime":1609154508460,"results":"51","hashOfConfig":"28"},{"size":3913,"mtime":1609153635379,"results":"52","hashOfConfig":"28"},{"size":2062,"mtime":1609154632085,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"m0xdso",{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\index.js",[],["116","117"],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\App.js",["118"],"import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport LayoutRoute from './routes/LayoutRoute';\r\nimport PrivateRoute from './routes/PrivateRoute';\r\nimport HomeScreen from './views/HomeScreen';\r\nimport LoginScreen from './views/LoginScreen';\r\nimport RegistrationScreen from './views/RegistrationScreen';\r\nimport DashboardScreen from './views/DashboardScreen';\r\nimport ProfileScreen from './views/ProfileScreen';\r\nimport AddProductScreen from './views/AddProductScreen';\r\nimport AppContext from './context/AppContext';\r\n\r\nconst App = () => {\r\n\r\n  const [globalState, setGlobalState] = useState(\r\n    {\r\n      loggedIn: localStorage.getItem('jwt') ? true : false,\r\n      profile: null\r\n    }\r\n  )\r\n\r\n  useEffect(\r\n    () => {\r\n      // if there is a token and globalState.profile is null\r\n      if (localStorage.getItem('jwt') && globalState.profile === null) {\r\n        // fetch GET to get profile details\r\n        fetch(\r\n          `${process.env.REACT_APP_BACKEND}/users/profile`,\r\n          {\r\n            method: 'GET',\r\n            headers: {\r\n              'Authorization': `Bearer ${localStorage.getItem('jwt')}`\r\n            }\r\n          }\r\n        )\r\n          .then(\r\n            (backendResponse) => backendResponse.json()\r\n          )\r\n          .then(\r\n            (json) => {\r\n              console.log('user\\'s profile', json)\r\n\r\n              // update the globalState.profile\r\n              setGlobalState(\r\n                {\r\n                  ...globalState,\r\n                  profile: json\r\n                }\r\n              )\r\n              console.log('GS', globalState.profile)\r\n            }\r\n          ).catch(\r\n            error => console.log(error)\r\n          )\r\n      }\r\n    },\r\n    [globalState.loggedIn, globalState.profile]\r\n  )\r\n\r\n  return (\r\n    <AppContext.Provider value={[globalState, setGlobalState]}>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          {/* Routes */}\r\n          <LayoutRoute path=\"/\" exact={true} component={HomeScreen} />\r\n          <LayoutRoute path=\"/home\" exact={true} component={HomeScreen} />\r\n          <LayoutRoute path=\"/login\" exact={true} component={LoginScreen} />\r\n          <LayoutRoute path=\"/register\" exact={true} component={RegistrationScreen} />\r\n          <LayoutRoute path=\"/dashboard\" exact={true} component={DashboardScreen} />\r\n\r\n          {/* Private routes */}\r\n          <PrivateRoute path=\"/profile\" exact={true} component={ProfileScreen} />\r\n          <PrivateRoute path=\"/addProduct\" exact={true} component={AddProductScreen} />\r\n\r\n          {/* All other routes */}\r\n          <LayoutRoute path=\"/*\" exact={true} component={HomeScreen} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </AppContext.Provider>\r\n  )\r\n}\r\n\r\nexport default App;","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\NavBar.js",[],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\Login.js",[],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\Register.js",[],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\views\\LoginScreen.js",[],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\views\\HomeScreen.js",[],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\routes\\LayoutRoute.js",["119"],"import React from 'react';\r\nimport { Route} from 'react-router-dom';\r\nimport NavBar from '../components/NavBar';\r\nimport CollapseNavBar from '../components/CollapseNavBar';\r\n\r\nconst LayoutRoute = (props) => {\r\n    return (\r\n\r\n        <div>\r\n            <CollapseNavBar/>\r\n            <Route path={props.path} exact={props.exact} component={props.component}\r\n            />      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LayoutRoute","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\views\\RegistrationScreen.js",[],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\ProductGrid.js",["120","121"],"import React, { useState } from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport MailDialog from './MailDialog';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardGrid: {\r\n        paddingTop: theme.spacing(3),\r\n        paddingBottom: theme.spacing(3),\r\n        marginBottom: theme.spacing(5),\r\n    },\r\n    card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nfunction ProuctGrid(props) {\r\n\r\n    const classes = useStyles();\r\n    const [state, setState] = useState({\r\n        products: [], errors: []\r\n    });\r\n\r\n\r\n    async function GetProducts() {\r\n        const fetchData = () => fetch(\r\n            `${process.env.REACT_APP_BACKEND}/products/available`,\r\n        )\r\n            .then(\r\n                (backendResponse) => backendResponse.json()\r\n            )\r\n            .then(\r\n                (json) => {\r\n                    console.log(\"logging json : \" , json);\r\n                    setState({ products: json, errors: [] })\r\n                }\r\n            )\r\n            .catch(\r\n                (errorObj) => {\r\n                    console.log(errorObj)\r\n                    setState({ ...state, errors: [\"Sorry! No products available at this moment. Try again later\"] })\r\n                }\r\n            )\r\n\r\n        if (state.products.length === 0) {\r\n            await fetchData();\r\n        }\r\n    }\r\n\r\n    // Get data from backend server and populate state.products\r\n    GetProducts();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            {\r\n                // Error if no products found\r\n                state.errors.length > 0 &&\r\n                <Container className={classes.cardGrid} maxWidth=\"md\">\r\n                    <div className=\"alert alert-danger text-center\">\r\n                        <ul>\r\n                            {\r\n                                state.errors.map(\r\n                                    (error) =>\r\n                                        <li>\r\n                                            {error}\r\n                                        </li>\r\n                                )\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </Container>\r\n            }\r\n            <Container className={classes.cardGrid} maxWidth=\"md\">\r\n                <Grid container spacing={4}>\r\n                    {state.products !== [] && state.products.map((product) => (\r\n                        <Grid key={product._id} item xs={12} sm={6} md={4}>\r\n                            <Card className={classes.card}>\r\n                                <CardMedia\r\n                                    className={classes.cardMedia}\r\n                                    image={product.images.length > 0 && product.images[0] || \"https://images.unsplash.com/photo-1605882174908-4bfbb907e3cd?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MjB8fGNhbWVyYSUyMGljb258ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"}\r\n                                    title={product.title}\r\n                                />\r\n                                <CardContent className={classes.cardContent}>\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        {product.title}\r\n                                    </Typography>\r\n                                    <Typography>\r\n                                        {product.summary}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions>\r\n                                    <Button href=\"#\" size=\"small\" color=\"primary\">\r\n                                        {product.monthlyRent} AED / month\r\n                                </Button>\r\n\r\n                                    <MailDialog sellerEmail={product.sellerEmail} productName={product.title} productId={product._id}>\r\n                                        <PhoneIcon />\r\n                                    </MailDialog>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default ProuctGrid;","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\SiteInfo.js",[],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\MailDialog.js",["122","123"],"import React, { useState, useContext } from 'react';\r\nimport AppContext from '../context/AppContext';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nfunction MailDialog(props) {\r\n  const [globalState, setGlobalState] = useContext(AppContext);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  function sendMail() {\r\n    var link = GetMailDetails()\r\n    window.location.href = link;\r\n    setOpen(false);\r\n  }\r\n\r\n  function GetMailDetails() {\r\n    var linkUrl = \"mailto:\" + props.sellerEmail + \"?subject=Interested in renting the \" + props.productName + \" ( id - \" + props.productId + \" ) listed on Rentz. &body= Send me a detailed quote with rental options. \";\r\n    return linkUrl\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {globalState.loggedIn && globalState.profile && globalState.profile.email === props.sellerEmail ?\r\n        <React.Fragment>\r\n        </React.Fragment> :\r\n        <React.Fragment>\r\n          <Button color=\"primary\" onClick={handleClickOpen}>\r\n            {props.children}\r\n          </Button>\r\n          <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <DialogTitle id=\"alert-dialog-title\">{\"Thank You\"}</DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText id=\"alert-dialog-description\">\r\n                Drop in an email to <a href={GetMailDetails()}> {props.sellerEmail}</a> to get a detailed quote.\r\n          </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleClose} variant=\"contained\" color=\"primary\">\r\n                Cancel\r\n          </Button>\r\n              <Button onClick={sendMail} variant=\"contained\" color=\"primary\">\r\n                Send Mail\r\n          </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </React.Fragment>\r\n      }\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default MailDialog","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\Footer.js",[],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\context\\AppContext.js",[],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\views\\ProfileScreen.js",[],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\routes\\PrivateRoute.js",[],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\Profile.js",["124"],"import React, { useState, useContext } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {\r\n    makeStyles,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Divider\r\n} from '@material-ui/core';\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\nimport AppContext from '../context/AppContext';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"#\">\r\n                Rentz\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundImage: 'url(https://images.unsplash.com/photo-1586023492125-27b2c045efd7)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        height: 100,\r\n        width: 100,\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(2),\r\n        padding: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    progressBar: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n    card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        backgroundColor: '#e9ecef26',\r\n        //theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        alignItems: 'center',\r\n    },\r\n    cardActions: {\r\n        alignItems: 'center',\r\n    },\r\n    cardMedia: {\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nfunction Profile() {\r\n\r\n    const [globalState, setGlobalState] = useContext(AppContext);\r\n\r\n    const [state, setState] = useState(\r\n        {\r\n            showErrors: false,\r\n            loading: false,\r\n            updateSuccess: false\r\n        }\r\n    )\r\n    const formData = new FormData();\r\n    let firstNameField;\r\n    let lastNameField;\r\n    let emailField;\r\n    let passwordField;\r\n\r\n    const attachFile = (event) => {\r\n        // 1. create an array for file\r\n        const files = Array.from(event.target.files)\r\n\r\n        // 2. for every attachment, append file to formData\r\n        files.forEach(\r\n            (file, index) => {\r\n                formData.append(index, file)\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    const updateUser = () => {\r\n        const errors = [];\r\n        // Validate the user's input\r\n        if (firstNameField.value.length === 0) {\r\n            errors.push(\"Please enter your first name!\");\r\n        }\r\n\r\n        if (lastNameField.value.length === 0) {\r\n            errors.push(\"Please enter your last name!\");\r\n        }\r\n\r\n        if (emailField.value.length === 0) {\r\n            errors.push(\"Please enter your email!\");\r\n        }\r\n\r\n        // If there are errors\r\n        if (errors.length > 0) {\r\n\r\n            setState(\r\n                {\r\n                    loading: false,\r\n                    showErrors: true,\r\n                    errors: errors,\r\n                    updateSuccess: false\r\n                }\r\n            )\r\n        }\r\n        // If no errors\r\n        else {\r\n            setState(\r\n                {\r\n                    ...state,\r\n                    loading: true,\r\n                }\r\n            );\r\n\r\n            // Capture all of user's response\r\n            // 1. Create an object called formData\r\n            // 2. For every field, add index and value to formData\r\n            formData.append('firstName', firstNameField.value);\r\n            formData.append('lastName', lastNameField.value)\r\n            formData.append('email', emailField.value)\r\n            formData.append('password', passwordField.value)\r\n            let oldPhotoUrl = globalState.profile && globalState.profile.photoUrl && globalState.profile.photoUrl.length > 0 && globalState.profile.photoUrl[0];\r\n            formData.append('photoUrl', oldPhotoUrl)\r\n\r\n\r\n            // 4. Send to backend\r\n            fetch(\r\n                `${process.env.REACT_APP_BACKEND}/users/update`,\r\n                {\r\n                    method: 'PUT',\r\n                    body: formData,\r\n                    headers: {\r\n                        'Authorization': `Bearer ${localStorage.getItem('jwt')}`\r\n                        //\"Content-Type\": \"application/json\"\r\n                    }\r\n                }\r\n            )\r\n                // First, convert string from backend to json\r\n                .then(\r\n                    (backendResponse) => backendResponse.json()\r\n                )\r\n                // Then, we can read the json from backend\r\n                .then(\r\n                    (json) => {\r\n                        console.log(json);\r\n                        setState(\r\n                            {\r\n                                loading: false,\r\n                                showErrors: false,\r\n                                errors: null,\r\n                                updateSuccess: true\r\n                            }\r\n                        );\r\n                    }\r\n                )\r\n                // If promise did not resolve\r\n                .catch(\r\n                    (error) => {\r\n                        console.log('An error occured ', error);\r\n\r\n                        setState(\r\n                            {\r\n                                loading: false,\r\n                                showErrors: true,\r\n                                errors: [\"Something went wrong. Try again after sometime.\"],\r\n                                updateSuccess: false\r\n                            }\r\n                        );\r\n\r\n                    }\r\n                )\r\n\r\n        }\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    console.log(globalState);\r\n\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n            <Grid item xs={12} sm={8} md={5} elevation={6}>\r\n\r\n                <div>\r\n                    <Card className={`${classes.card} mt-3 ml-5 mr-5 MuiPaper-elevation3`}>\r\n                        <CardContent>\r\n                            <Box\r\n                                alignItems=\"center\"\r\n                                display=\"flex\"\r\n                                flexDirection=\"column\">\r\n                                <Avatar\r\n                                    className={classes.avatar}\r\n                                    src={globalState.profile && globalState.profile.photoUrl && globalState.profile.photoUrl.length > 0 && globalState.profile.photoUrl[0]}\r\n                                />\r\n                                <Typography\r\n                                    color=\"textPrimary\"\r\n                                    gutterBottom\r\n                                    variant=\"h4\"\r\n                                >\r\n                                    {globalState.profile && globalState.profile.firstName}\r\n                                    {\" \"}\r\n                                    {globalState.profile && globalState.profile.lastName}\r\n                                </Typography>\r\n                                <Typography\r\n                                    color=\"textSecondary\"\r\n                                    variant=\"body1\"\r\n                                >\r\n                                    {globalState.profile && globalState.profile.email}\r\n                                </Typography>\r\n                            </Box>\r\n                        </CardContent>\r\n                        <Divider />\r\n                        <CardActions className={classes.cardActions}>\r\n                            <input\r\n                                accept=\"image/*\"\r\n                                className={classes.input}\r\n                                id=\"contained-button-file\"\r\n                                multiple\r\n                                type=\"file\"\r\n                                onChange={attachFile}\r\n                            />\r\n                            <label htmlFor=\"contained-button-file\">\r\n                                <Button\r\n                                    variant=\"text\" color=\"primary\"\r\n                                    component=\"span\"\r\n                                    className=\"text-center\">\r\n                                    Change Picture\r\n                                    </Button>\r\n                            </label>\r\n                        </CardActions>\r\n                    </Card>\r\n                </div>\r\n                <div className={classes.paper}>\r\n                    <br />\r\n                    {\r\n                        state.showErrors === true &&\r\n                        <div className=\" error-messages alert alert-danger w-75 text-center\">\r\n                            <ul>\r\n                                {\r\n                                    state.errors.map(\r\n                                        (error) =>\r\n                                            <li>\r\n                                                {error}\r\n                                            </li>\r\n                                    )\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                    }\r\n\r\n                    {\r\n                        /* Success message and login */\r\n                        state.updateSuccess === true &&\r\n                        <div className=\"alert alert-success w-75 text-center\">\r\n                            Account updated succesfully!\r\n                        </div>\r\n                    }\r\n\r\n                    <form className={classes.form} noValidate>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    inputRef={elem => firstNameField = elem}\r\n                                    autoComplete=\"fname\"\r\n                                    name=\"firstName\"\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"firstName\"\r\n                                    label=\"First Name\"\r\n                                    defaultValue={globalState.profile && globalState.profile.firstName}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    inputRef={elem => lastNameField = elem}\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"lastName\"\r\n                                    label=\"Last Name\"\r\n                                    name=\"lastName\"\r\n                                    autoComplete=\"lname\"\r\n                                    defaultValue={globalState.profile && globalState.profile.lastName}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    defaultValue={globalState.profile && globalState.profile.email}\r\n                                    inputRef={elem => emailField = elem}\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    inputRef={elem => passwordField = elem}\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                    helperText=\"Enter new password if you wish to change\"\r\n                                />\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        {\r\n                            !state.loading &&\r\n                            <Button\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.submit}\r\n                                onClick={updateUser}\r\n                            >\r\n                                Update\r\n                            </Button>\r\n                        }\r\n                        {\r\n                            state.loading &&\r\n                            <LinearProgress className={classes.progressBar} />\r\n                        }\r\n                        <Grid container justify=\"flex-end\">\r\n                        </Grid>\r\n                    </form>\r\n\r\n                    <Box mt={5}>\r\n                        <Copyright />\r\n                    </Box>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Profile","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\views\\AddProductScreen.js",["125","126","127","128"],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\AddProductForm.js",["129","130","131","132","133","134"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Category } from '@material-ui/icons';\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n      </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nfunction AddProductForm() {\r\n\r\n    const [state, setState] = useState(\r\n        {\r\n            showErrors: false,\r\n            loading: false,\r\n            addedProduct: false\r\n        }\r\n    )\r\n\r\n    const formData = new FormData();\r\n    let categoryField;\r\n    let titleField;\r\n    let summaryField;\r\n    let monthlyRentField;\r\n    let imageUrlField;\r\n\r\n    const attachFile = (event) => {\r\n        // 1. create an array for file\r\n        const files = Array.from(event.target.files)\r\n\r\n        // 2. for every attachment, append file to formData\r\n        files.forEach(\r\n            (file, index) => {\r\n                formData.append(index, file)\r\n            }\r\n        )\r\n    }\r\n\r\n    const addProduct = () => {\r\n        const errors = [];\r\n        // Validate the user's input\r\n        if (categoryField.value.length === 0) {\r\n            errors.push(\"Please enter category!\");\r\n        }\r\n\r\n        if (titleField.value.length === 0) {\r\n            errors.push(\"Please enter title!\");\r\n        }\r\n\r\n        if (monthlyRentField.value.length === 0) {\r\n            errors.push(\"Please enter monthly rent!\");\r\n        }\r\n\r\n        if (summaryField.value.length === 0) {\r\n            errors.push(\"Please enter summary!\");\r\n        }\r\n\r\n        // if (tcsCheckBox.checked === false) {\r\n        //     errors.push(\"You need to accept terms & conditions.\");\r\n        // }\r\n\r\n        // If there are errors\r\n        if (errors.length > 0) {\r\n\r\n            setState(\r\n                {\r\n                    loading: false,\r\n                    showErrors: true,\r\n                    errors: errors,\r\n                    addedProduct: false\r\n                }\r\n            )\r\n        }\r\n        // If no errors\r\n        else {\r\n            setState(\r\n                {\r\n                    loading: true,\r\n                    showErrors: false,\r\n                    errors: null,\r\n                    addedProduct: false\r\n                }\r\n            );\r\n\r\n            // Capture all of user's response \r\n            // 1. Create an object called formData\r\n            // 2. For every field, add value to formData\r\n            formData.append('category', categoryField.value)\r\n            formData.append('title', titleField.value)\r\n            formData.append('summary', summaryField.value)\r\n            formData.append('monthlyRent', monthlyRentField.value)\r\n            formData.append('available', true)\r\n\r\n            // 4. Send to backend\r\n            fetch(\r\n                `${process.env.REACT_APP_BACKEND}/products`,\r\n                {\r\n                    method: 'POST',\r\n                    body: formData,\r\n                    headers: {\r\n                        'Authorization': `Bearer ${localStorage.getItem('jwt')}`\r\n                        //\"Content-Type\": \"application/json\"\r\n                    }\r\n                }\r\n            )\r\n                // First, convert string from backend to json\r\n                .then(\r\n                    (backendResponse) => backendResponse.json()\r\n                )\r\n                // Then, we can read the json from backend\r\n                .then(\r\n                    (json) => {\r\n                        console.log(json);\r\n                        setState(\r\n                            {\r\n                                loading: false,\r\n                                showErrors: false,\r\n                                errors: null,\r\n                                addedProduct: true\r\n                            }\r\n                        );\r\n                    }\r\n                )\r\n                // If promise did not resolve\r\n                .catch(\r\n                    (error) => {\r\n                        console.log('An error occured ', error);\r\n\r\n                        setState(\r\n                            {\r\n                                loading: false,\r\n                                showErrors: true,\r\n                                errors: [\"Something went wrong. Try again after sometime.\"],\r\n                                addedProduct: false\r\n                            }\r\n                        );\r\n\r\n                    }\r\n                )\r\n\r\n        }\r\n    }\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Add your Product\r\n        </Typography>\r\n\r\n                    <br />\r\n                    {\r\n                        state.showErrors === true &&\r\n                        <div className=\" error-messages alert alert-danger w-75 text-center\">\r\n                            <ul>\r\n                                {\r\n                                    state.errors.map(\r\n                                        (error) =>\r\n                                            <li>\r\n                                                {error}\r\n                                            </li>\r\n                                    )\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                    }\r\n\r\n                    {\r\n                        /* Success message and login */\r\n                        state.addedProduct === true &&\r\n                        <div className=\"alert alert-success\">\r\n                            Account registered succesfully!\r\n                                <Link href=\"products\" className=\"btn\">\r\n                                View all products\r\n                                </Link>\r\n                        </div>\r\n                    }\r\n\r\n                    <form className={classes.form} noValidate>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    inputRef={elem => categoryField = elem}\r\n                                    name=\"category\"\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"category\"\r\n                                    label=\"Category\"\r\n                                    autoFocus\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    inputRef={elem => titleField = elem}\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"title\"\r\n                                    label=\"Title\"\r\n                                    name=\"title\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    inputRef={elem => monthlyRentField = elem}\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"monthlyRent\"\r\n                                    label=\"Monthly Rent\"\r\n                                    name=\"monthlyRent\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    inputRef={elem => summaryField = elem}\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"summary\"\r\n                                    label=\"Summary\"\r\n                                    id=\"summary\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    accept=\"image/*\"\r\n                                    variant=\"outlined\"\r\n                                    id=\"contained-button-file\"\r\n                                    type=\"file\"\r\n                                    fullWidth\r\n                                    helperText=\"Product Image\"\r\n                                    onChange={attachFile}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        {!state.loading && !state.addedProduct &&\r\n                            <Button\r\n                                onClick={addProduct}\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.submit}\r\n                            >\r\n                                Add Product\r\n                        </Button>\r\n                        }\r\n                        {\r\n                            state.loading &&\r\n                            <LinearProgress className={classes.progressBar} />\r\n                        }\r\n                        <Grid container justify=\"flex-end\">\r\n                        </Grid>\r\n                    </form>\r\n                </div>\r\n                <Box mt={5}>\r\n                    <Copyright />\r\n                </Box>\r\n            </Container>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default AddProductForm;","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\SideBar.js",["135","136","137"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { ProSidebar, Menu, MenuItem, SubMenu } from 'react-pro-sidebar';\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\nimport { SidebarHeader, SidebarFooter, SidebarContent } from 'react-pro-sidebar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport { Avatar } from '@material-ui/core';\r\nimport AppContext from '../context/AppContext';\r\n\r\nfunction SideBar() {\r\n    const [globalState, setGlobalState] = useContext(AppContext);\r\n\r\n    useEffect(\r\n        () => {\r\n            // if there is a token and globalState.profile is null\r\n            if (localStorage.getItem('jwt') && globalState.profile === null) {\r\n                // fetch GET to get profile details\r\n                fetch(\r\n                    `${process.env.REACT_APP_BACKEND}/users/profile`,\r\n                    {\r\n                        method: 'GET',\r\n                        headers: {\r\n                            'Authorization': `Bearer ${localStorage.getItem('jwt')}`\r\n                        }\r\n                    }\r\n                )\r\n                    .then(\r\n                        (backendResponse) => backendResponse.json()\r\n                    )\r\n                    .then(\r\n                        (json) => {\r\n                            console.log('user\\'s profile', json)\r\n\r\n                            // update the globalState.profile\r\n                            setGlobalState(\r\n                                {\r\n                                    ...globalState,\r\n                                    profile: json\r\n                                }\r\n                            )\r\n                            console.log('GS', globalState.profile)\r\n                        }\r\n                    ).catch(\r\n                        error => console.log(error)\r\n                    )\r\n            }\r\n        },\r\n        [globalState.loggedIn, globalState.profile]\r\n    )\r\n\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            height: '100vh',\r\n        },\r\n        image: {\r\n            backgroundImage: 'url(https://images.unsplash.com/photo-1586023492125-27b2c045efd7)',\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundColor:\r\n                theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n        },\r\n        paper: {\r\n            marginTop: theme.spacing(8, 4),\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n        },\r\n        avatar: {\r\n            height: 100,\r\n            width: 100,\r\n            margin: theme.spacing(1),\r\n            backgroundColor: theme.palette.secondary.main,\r\n        },\r\n        form: {\r\n            width: '100%', // Fix IE 11 issue.\r\n            marginTop: theme.spacing(2),\r\n            padding: theme.spacing(3),\r\n        },\r\n        submit: {\r\n            margin: theme.spacing(3, 0, 2),\r\n        },\r\n        progressBar: {\r\n            height: '100%',\r\n        },\r\n        // avatar: {\r\n        //     height: 50,\r\n        //     width: 50,\r\n\r\n        // }\r\n    }));\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n\r\n\r\n\r\n        <React.Fragment>\r\n            {/* <CssBaseline /> */}\r\n\r\n            <ProSidebar className={classes.root}>\r\n                <SidebarHeader>\r\n                    <Menu></Menu>\r\n                    <Menu>\r\n                        <MenuItem> WELCOME {globalState.profile && (globalState.profile.firstName).toString().toUpperCase()} </MenuItem>\r\n                        <MenuItem>\r\n                            <Avatar\r\n                                className={classes.avatar}\r\n                                src={globalState.profile && globalState.profile.photoUrl && globalState.profile.photoUrl.length > 0 && globalState.profile.photoUrl[0]}\r\n                            />\r\n                        </MenuItem>\r\n\r\n                    </Menu>\r\n                    <Menu></Menu>\r\n                </SidebarHeader>\r\n                <SidebarContent>\r\n                    <Menu iconShape=\"square\">\r\n                        <MenuItem>Home\r\n                        <Link to=\"/home\" />\r\n                        </MenuItem>\r\n\r\n                        <MenuItem>Edit Profile\r\n                        <Link to=\"/profile\" />\r\n                        </MenuItem>\r\n\r\n                        <MenuItem>Add a Product\r\n                        <Link to=\"/addProduct\" />\r\n                        </MenuItem>\r\n                    </Menu>\r\n                </SidebarContent>\r\n                <SidebarFooter>\r\n                    <Menu></Menu>\r\n                    Rentz\r\n                    <Menu></Menu>\r\n                </SidebarFooter>\r\n            </ProSidebar>;\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default SideBar;\r\n","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\UserProductsGrid.js",["138","139"],"import React, { useState } from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MailDialog from './MailDialog';\r\nimport DeleteConfirmModal from './DeleteConfirmModal';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardGrid: {\r\n        paddingTop: theme.spacing(3),\r\n        paddingBottom: theme.spacing(3),\r\n        marginBottom: theme.spacing(5),\r\n    },\r\n    card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nfunction UserProuctGrid(props) {\r\n\r\n    const classes = useStyles();\r\n    const [state, setState] = useState({\r\n        products: [], errors: []\r\n    });\r\n\r\n    async function GetProducts() {\r\n        const fetchData = () => fetch(\r\n            `${process.env.REACT_APP_BACKEND}/products/available`,\r\n        )\r\n            .then(\r\n                (backendResponse) => backendResponse.json()\r\n            )\r\n            .then(\r\n                (json) => {\r\n                    console.log(\"logging json : \", json);\r\n                    setState({ products: json, errors: [] })\r\n                }\r\n            )\r\n            .catch(\r\n                (errorObj) => {\r\n                    console.log(errorObj)\r\n                    setState({ ...state, errors: [\"Sorry! No products available at this moment. Try again later\"] })\r\n                }\r\n            )\r\n\r\n        if (state.products.length === 0) {\r\n            await fetchData();\r\n        }\r\n    }\r\n\r\n    // Get data from backend server and populate state.products\r\n    GetProducts();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            {\r\n                // Error if no products found\r\n                state.errors.length > 0 &&\r\n                <Container className={classes.cardGrid} maxWidth=\"md\">\r\n                    <div className=\"alert alert-danger text-center\">\r\n                        <ul>\r\n                            {\r\n                                state.errors.map(\r\n                                    (error) =>\r\n                                        <li>\r\n                                            {error}\r\n                                        </li>\r\n                                )\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </Container>\r\n            }\r\n            <Container className={classes.cardGrid} maxWidth=\"md\">\r\n                <Grid container spacing={4}>\r\n                    {state.products !== [] && state.products.map((product) => (\r\n                        <Grid key={product._id} item xs={12} sm={6} md={4}>\r\n                            {product.available &&\r\n                                <Card className={classes.card}>\r\n                                    <CardMedia\r\n                                        className={classes.cardMedia}\r\n                                        image={product.images.length > 0 && product.images[0] || \"https://images.unsplash.com/photo-1605882174908-4bfbb907e3cd?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MjB8fGNhbWVyYSUyMGljb258ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"}\r\n                                        title={product.title}\r\n                                    />\r\n                                    <CardContent className={classes.cardContent}>\r\n                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                            {product.title}\r\n                                        </Typography>\r\n                                        <Typography>\r\n                                            {product.summary}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                    <CardActions>\r\n                                        <Button href=\"#\" size=\"small\" color=\"primary\">\r\n                                            {product.monthlyRent} AED / month\r\n                                        </Button>\r\n\r\n                                        <MailDialog sellerEmail={product.sellerEmail} productName={product.title} productId={product._id}>\r\n                                            <PhoneIcon />\r\n                                        </MailDialog>\r\n\r\n                                        <DeleteConfirmModal productId={product._id} sellerEmail={product.sellerEmail} >\r\n                                            <DeleteIcon />\r\n                                        </DeleteConfirmModal>\r\n\r\n                                    </CardActions>\r\n                                </Card>\r\n                            }\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default UserProuctGrid;","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\DeleteConfirmModal.js",["140","141","142","143"],"import React, { useState, useContext } from 'react';\r\nimport AppContext from '../context/AppContext';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Link from '@material-ui/core/Link';\r\nimport { render } from '@testing-library/react';\r\n\r\nfunction DeleteConfirmModal(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [globalState, setGlobalState] = useContext(AppContext);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  let fetchStatus;\r\n  function deleteProduct() {\r\n    let fetchUrl = `${process.env.REACT_APP_BACKEND}/products/sold/` + props.productId\r\n    fetch(\r\n      fetchUrl,\r\n      {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('jwt')}`,\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      }\r\n    )\r\n      // First, convert string from backend to json\r\n      .then(\r\n        (backendResponse) => {\r\n          fetchStatus = backendResponse.status;\r\n          return backendResponse.json();\r\n        }\r\n      )\r\n      // Then, we can read the json from backend\r\n      .then(\r\n        (json) => {\r\n          console.log(json);\r\n          if (fetchStatus === 200) {\r\n            console.log(\"Product marked as sold out\")\r\n          }\r\n          else {\r\n            alert(json.message)\r\n          }\r\n          window.location.href = \"/dashboard\"\r\n        }\r\n      )\r\n      // If promise did not resolve\r\n      .catch(\r\n        (error) => {\r\n          console.log('An error occured ', error);\r\n        }\r\n      );\r\n\r\n    setOpen(false);\r\n\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {globalState.loggedIn && globalState.profile && globalState.profile.email === props.sellerEmail ?\r\n        <React.Fragment>\r\n          <Button color=\"primary\" onClick={handleClickOpen}>\r\n            {props.children}\r\n          </Button>\r\n          <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <DialogTitle id=\"alert-dialog-title\">{\"Confirm Delete?\"}</DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText id=\"alert-dialog-description\">\r\n                Are you sure you want to mark the product as sold?\r\n          </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleClose} variant=\"contained\" color=\"primary\">\r\n                Cancel\r\n          </Button>\r\n              <Button onClick={deleteProduct} variant=\"contained\" color=\"primary\">\r\n                Sold Out\r\n          </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </React.Fragment> :\r\n        <React.Fragment>\r\n        </React.Fragment>\r\n      }\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default DeleteConfirmModal","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\views\\DashboardScreen.js",["144","145"],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\CollapseNavBar.js",["146","147","148","149","150","151"],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\WelcomeInfo.js",["152"],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":58,"column":5,"nodeType":"159","endLine":58,"endColumn":48,"suggestions":"160"},{"ruleId":"161","severity":1,"message":"162","line":3,"column":8,"nodeType":"163","messageId":"164","endLine":3,"endColumn":14},{"ruleId":"165","severity":1,"message":"166","line":99,"column":70,"nodeType":"167","messageId":"168","endLine":99,"endColumn":72},{"ruleId":"165","severity":1,"message":"166","line":99,"column":91,"nodeType":"167","messageId":"168","endLine":99,"endColumn":93},{"ruleId":"161","severity":1,"message":"169","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":25},{"ruleId":"161","severity":1,"message":"170","line":11,"column":23,"nodeType":"163","messageId":"164","endLine":11,"endColumn":37},{"ruleId":"161","severity":1,"message":"170","line":92,"column":25,"nodeType":"163","messageId":"164","endLine":92,"endColumn":39},{"ruleId":"161","severity":1,"message":"171","line":2,"column":8,"nodeType":"163","messageId":"164","endLine":2,"endColumn":19},{"ruleId":"161","severity":1,"message":"172","line":3,"column":8,"nodeType":"163","messageId":"164","endLine":3,"endColumn":16},{"ruleId":"161","severity":1,"message":"173","line":4,"column":8,"nodeType":"163","messageId":"164","endLine":4,"endColumn":14},{"ruleId":"161","severity":1,"message":"174","line":6,"column":8,"nodeType":"163","messageId":"164","endLine":6,"endColumn":15},{"ruleId":"161","severity":1,"message":"175","line":2,"column":8,"nodeType":"163","messageId":"164","endLine":2,"endColumn":14},{"ruleId":"161","severity":1,"message":"176","line":6,"column":8,"nodeType":"163","messageId":"164","endLine":6,"endColumn":24},{"ruleId":"161","severity":1,"message":"177","line":7,"column":8,"nodeType":"163","messageId":"164","endLine":7,"endColumn":16},{"ruleId":"161","severity":1,"message":"178","line":11,"column":8,"nodeType":"163","messageId":"164","endLine":11,"endColumn":24},{"ruleId":"161","severity":1,"message":"179","line":15,"column":10,"nodeType":"163","messageId":"164","endLine":15,"endColumn":18},{"ruleId":"161","severity":1,"message":"180","line":66,"column":9,"nodeType":"163","messageId":"164","endLine":66,"endColumn":22},{"ruleId":"161","severity":1,"message":"169","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":25},{"ruleId":"161","severity":1,"message":"181","line":2,"column":38,"nodeType":"163","messageId":"164","endLine":2,"endColumn":45},{"ruleId":"157","severity":1,"message":"182","line":48,"column":9,"nodeType":"159","endLine":48,"endColumn":52,"suggestions":"183"},{"ruleId":"165","severity":1,"message":"166","line":101,"column":74,"nodeType":"167","messageId":"168","endLine":101,"endColumn":76},{"ruleId":"165","severity":1,"message":"166","line":101,"column":95,"nodeType":"167","messageId":"168","endLine":101,"endColumn":97},{"ruleId":"161","severity":1,"message":"169","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":25},{"ruleId":"161","severity":1,"message":"184","line":9,"column":8,"nodeType":"163","messageId":"164","endLine":9,"endColumn":12},{"ruleId":"161","severity":1,"message":"185","line":10,"column":10,"nodeType":"163","messageId":"164","endLine":10,"endColumn":16},{"ruleId":"161","severity":1,"message":"170","line":14,"column":23,"nodeType":"163","messageId":"164","endLine":14,"endColumn":37},{"ruleId":"161","severity":1,"message":"174","line":7,"column":8,"nodeType":"163","messageId":"164","endLine":7,"endColumn":15},{"ruleId":"161","severity":1,"message":"170","line":11,"column":23,"nodeType":"163","messageId":"164","endLine":11,"endColumn":37},{"ruleId":"161","severity":1,"message":"186","line":2,"column":8,"nodeType":"163","messageId":"164","endLine":2,"endColumn":14},{"ruleId":"161","severity":1,"message":"187","line":4,"column":8,"nodeType":"163","messageId":"164","endLine":4,"endColumn":19},{"ruleId":"161","severity":1,"message":"188","line":5,"column":8,"nodeType":"163","messageId":"164","endLine":5,"endColumn":15},{"ruleId":"161","severity":1,"message":"184","line":7,"column":8,"nodeType":"163","messageId":"164","endLine":7,"endColumn":12},{"ruleId":"189","severity":1,"message":"190","line":53,"column":9,"nodeType":"191","endLine":53,"endColumn":46},{"ruleId":"189","severity":1,"message":"190","line":70,"column":19,"nodeType":"191","endLine":70,"endColumn":168},{"ruleId":"161","severity":1,"message":"170","line":28,"column":25,"nodeType":"163","messageId":"164","endLine":28,"endColumn":39},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'globalState'. Either include it or remove the dependency array. You can also do a functional update 'setGlobalState(g => ...)' if you only need 'globalState' in the 'setGlobalState' call.","ArrayExpression",["194"],"no-unused-vars","'NavBar' is defined but never used.","Identifier","unusedVar","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'useState' is defined but never used.","'setGlobalState' is assigned a value but never used.","'ProductGrid' is defined but never used.","'SiteInfo' is defined but never used.","'Footer' is defined but never used.","'SideBar' is defined but never used.","'Avatar' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'Category' is defined but never used.","'imageUrlField' is defined but never used.","'SubMenu' is defined but never used.","React Hook useEffect has missing dependencies: 'globalState' and 'setGlobalState'. Either include them or remove the dependency array.",["195"],"'Link' is defined but never used.","'render' is defined but never used.","'AppBar' is defined but never used.","'CssBaseline' is defined but never used.","'Toolbar' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},"Update the dependencies array to be: [globalState, globalState.loggedIn, globalState.profile]",{"range":"200","text":"201"},"Update the dependencies array to be: [globalState, globalState.loggedIn, globalState.profile, setGlobalState]",{"range":"202","text":"203"},[1795,1838],"[globalState, globalState.loggedIn, globalState.profile]",[1941,1984],"[globalState, globalState.loggedIn, globalState.profile, setGlobalState]"]