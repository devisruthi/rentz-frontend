[{"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\index.js":"1","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\App.js":"2","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\NavBar.js":"4","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\Login.js":"5","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\Register.js":"6","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\views\\LoginScreen.js":"7","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\views\\HomeScreen.js":"8","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\routes\\LayoutRoute.js":"9","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\views\\RegistrationScreen.js":"10","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\views\\ProductScreen.js":"11","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\ProductGrid.js":"12","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\SiteInfo.js":"13","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\MailDialog.js":"14","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\Footer.js":"15"},{"size":500,"mtime":499162500000,"results":"16","hashOfConfig":"17"},{"size":803,"mtime":1608879303421,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":1775,"mtime":1608896141947,"results":"20","hashOfConfig":"17"},{"size":8363,"mtime":1608904050372,"results":"21","hashOfConfig":"17"},{"size":12491,"mtime":1608904060101,"results":"22","hashOfConfig":"17"},{"size":217,"mtime":1608555524721,"results":"23","hashOfConfig":"17"},{"size":227,"mtime":1608555538145,"results":"24","hashOfConfig":"17"},{"size":373,"mtime":1608904133811,"results":"25","hashOfConfig":"17"},{"size":250,"mtime":1608555532857,"results":"26","hashOfConfig":"17"},{"size":400,"mtime":1608924093944,"results":"27","hashOfConfig":"17"},{"size":4732,"mtime":1608933125244,"results":"28","hashOfConfig":"17"},{"size":1072,"mtime":1608931399355,"results":"29","hashOfConfig":"17"},{"size":1961,"mtime":1608894661098,"results":"30","hashOfConfig":"17"},{"size":1571,"mtime":1608903815739,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"m0xdso",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\index.js",[],["66","67"],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\App.js",["68"],"import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport LayoutRoute from './routes/LayoutRoute';\nimport HomeScreen from './views/HomeScreen';\nimport LoginScreen from './views/LoginScreen';\nimport RegistrationScreen from './views/RegistrationScreen';\nimport ProductScreen from './views/ProductScreen';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <LayoutRoute path=\"/\" exact={true} component={HomeScreen} />\n        <LayoutRoute path=\"/login\" exact={true} component={LoginScreen} />\n        <LayoutRoute path=\"/register\" exact={true} component={RegistrationScreen} />\n        <LayoutRoute path=\"/products\" exact={true} component={ProductScreen} />\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default App;","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\NavBar.js",[],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\Login.js",[],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\Register.js",["69","70"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\n// import Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright Â© '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Rentz\r\n      </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundImage: 'url(https://images.unsplash.com/photo-1586023492125-27b2c045efd7)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(2),\r\n        padding: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    progressBar: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\nfunction Register() {\r\n\r\n    const [state, setState] = useState(\r\n        {\r\n            showErrors: false,\r\n            loading: false,\r\n            registeredSuccess: false\r\n        }\r\n    )\r\n\r\n    let firstNameField;\r\n    let lastNameField;\r\n    let emailField;\r\n    let passwordField;\r\n    let tcsCheckBox;\r\n\r\n    const registerUser = () => {\r\n\r\n        const errors = [];\r\n        // Validate the user's input\r\n        if (firstNameField.value.length === 0) {\r\n            errors.push(\"Please enter your first name!\");\r\n        }\r\n\r\n        if (lastNameField.value.length === 0) {\r\n            errors.push(\"Please enter your last name!\");\r\n        }\r\n\r\n        if (emailField.value.length === 0) {\r\n            errors.push(\"Please enter your email!\");\r\n        }\r\n\r\n        if (passwordField.value.length === 0) {\r\n            errors.push(\"Please enter your password!\");\r\n        }\r\n\r\n        if (tcsCheckBox.checked === false) {\r\n            errors.push(\"You need to accept terms & conditions.\");\r\n        }\r\n\r\n        // If there are errors\r\n        if (errors.length > 0) {\r\n\r\n            setState(\r\n                {\r\n                    loading: false,\r\n                    showErrors: true,\r\n                    errors: errors,\r\n                    registeredSuccess: false\r\n                }\r\n            )\r\n        }\r\n        // If no errors\r\n        else {\r\n            setState(\r\n                {\r\n                    loading: true,\r\n                    showErrors: false,\r\n                    errors: null,\r\n                    registeredSuccess: false\r\n                }\r\n            );\r\n\r\n            // Capture all of user's response\r\n            // 1. Create an object called formData\r\n            // 2. For every field, add index and value to formData\r\n            const formData = {\r\n                firstName: firstNameField.value,\r\n                lastName: lastNameField.value,\r\n                email: emailField.value,\r\n                password: passwordField.value\r\n            };\r\n\r\n            // 4. Send to backend\r\n            fetch(\r\n                'http://localhost:3001/users/register',\r\n                {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(formData),\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                }\r\n            )\r\n                // First, convert string from backend to json\r\n                .then(\r\n                    (backendResponse) => backendResponse.json()\r\n                )\r\n                // Then, we can read the json from backend\r\n                .then(\r\n                    (json) => {\r\n                        console.log(json);\r\n                        setState(\r\n                            {\r\n                                loading: false,\r\n                                showErrors: false,\r\n                                errors: null,\r\n                                registeredSuccess: true\r\n                            }\r\n                        );\r\n                    }\r\n                )\r\n                // If promise did not resolve\r\n                .catch(\r\n                    (error) => {\r\n                        console.log('An error occured ', error);\r\n\r\n                        setState(\r\n                            {\r\n                                loading: false,\r\n                                showErrors: true,\r\n                                errors: [\"Something went wrong. Try again after sometime.\"],\r\n                                registeredSuccess: false\r\n                            }\r\n                        );\r\n\r\n                    }\r\n                )\r\n\r\n        }\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n            <Grid item xs={12} sm={8} md={5} elevation={6} square>\r\n                <div>\r\n                    <div className={classes.paper}>\r\n                        <Avatar className={classes.avatar}>\r\n                            <LockOutlinedIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Sign up\r\n                        </Typography>\r\n                        <br />\r\n                        {\r\n                            state.showErrors === true &&\r\n                            <div className=\" error-messages alert alert-danger w-75\">\r\n                                <ol>\r\n                                    {\r\n                                        state.errors.map(\r\n                                            (error) =>\r\n                                                <li>\r\n                                                    {error}\r\n                                                </li>\r\n                                        )\r\n                                    }\r\n                                </ol>\r\n                            </div>\r\n                        }\r\n\r\n                        {\r\n                            /* Success message and login */\r\n                            state.registeredSuccess === true &&\r\n                            <div className=\"alert alert-success\">\r\n                                Account registered succesfully!\r\n                                <Link href=\"login\" className=\"btn\">\r\n                                    Login\r\n                                </Link>\r\n                            </div>\r\n                        }\r\n\r\n                        <form className={classes.form} noValidate>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                        inputRef={elem => firstNameField = elem}\r\n                                        autoComplete=\"fname\"\r\n                                        name=\"firstName\"\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"firstName\"\r\n                                        label=\"First Name\"\r\n                                        autoFocus\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField\r\n                                        inputRef={elem => lastNameField = elem}\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"lastName\"\r\n                                        label=\"Last Name\"\r\n                                        name=\"lastName\"\r\n                                        autoComplete=\"lname\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        inputRef={elem => emailField = elem}\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"email\"\r\n                                        label=\"Email Address\"\r\n                                        name=\"email\"\r\n                                        autoComplete=\"email\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        inputRef={elem => passwordField = elem}\r\n                                        variant=\"outlined\"\r\n                                        required\r\n                                        fullWidth\r\n                                        name=\"password\"\r\n                                        label=\"Password\"\r\n                                        type=\"password\"\r\n                                        id=\"password\"\r\n                                        autoComplete=\"current-password\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <label>Do you agree to terms &amp; conditions? *</label>\r\n                                    <input\r\n                                        ref={(elem) => tcsCheckBox = elem}\r\n                                        className=\"checkbox\" name=\"termsConditions\" type=\"checkbox\" /> Yes\r\n                                </Grid>\r\n                            </Grid>\r\n                            {\r\n                                !state.loading && !state.registeredSuccess &&\r\n                                <Button\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.submit}\r\n                                    onClick={registerUser}\r\n                                >\r\n                                    Sign Up\r\n                            </Button>\r\n                            }\r\n                            {\r\n                                state.loading &&\r\n                                <LinearProgress className={classes.progressBar} />\r\n                            }\r\n                            <Grid container justify=\"flex-end\">\r\n                                <Grid item>\r\n                                    <Link href=\"login\" variant=\"body2\">\r\n                                        Already have an account? Sign in\r\n                                    </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                    </div>\r\n                    <Box mt={5}>\r\n                        <Copyright />\r\n                    </Box>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Register","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\views\\LoginScreen.js",[],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\views\\HomeScreen.js",[],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\routes\\LayoutRoute.js",["71"],"import React from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport NavBar from '../components/NavBar';\r\n\r\nconst LayoutRoute = (props) => {\r\n    return (\r\n\r\n        <div>\r\n            <NavBar/>\r\n            <Route path={props.path} exact={props.exact} component={props.component}\r\n            />      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LayoutRoute","C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\views\\RegistrationScreen.js",[],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\views\\ProductScreen.js",[],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\ProductGrid.js",["72"],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\SiteInfo.js",[],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\MailDialog.js",[],"C:\\Users\\Shruti Devi\\Documents\\dev\\rentz\\rentz-frontend\\src\\components\\Footer.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":2,"column":25,"nodeType":"79","messageId":"80","endLine":2,"endColumn":30},{"ruleId":"77","severity":1,"message":"81","line":6,"column":8,"nodeType":"79","messageId":"80","endLine":6,"endColumn":16},{"ruleId":"77","severity":1,"message":"82","line":14,"column":8,"nodeType":"79","messageId":"80","endLine":14,"endColumn":17},{"ruleId":"77","severity":1,"message":"83","line":2,"column":17,"nodeType":"79","messageId":"80","endLine":2,"endColumn":21},{"ruleId":"77","severity":1,"message":"84","line":14,"column":10,"nodeType":"79","messageId":"80","endLine":14,"endColumn":27},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Checkbox' is defined but never used.","'Container' is defined but never used.","'Link' is defined but never used.","'CenterFocusStrong' is defined but never used.","no-global-assign","no-unsafe-negation"]